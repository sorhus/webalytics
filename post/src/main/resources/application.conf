
akka.http.server.parsing.max-content-length=104857600

#akka.loglevel = DEBUG
# Absolute path to the default journal plugin configuration entry.
#akka.persistence.journal.plugin = "akka.persistence.journal.inmem"
akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
# Absolute path to the default snapshot store plugin configuration entry.
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"


# Configuration for the LeveldbReadJournal
akka.persistence.query.journal.leveldb {
  # Implementation class of the LevelDB ReadJournalProvider
  class = "akka.persistence.query.journal.leveldb.LeveldbReadJournalProvider"

  # Absolute path to the write journal plugin configuration entry that this
  # query journal will connect to. That must be a LeveldbJournal or SharedLeveldbJournal.
  # If undefined (or "") it will connect to the default journal as specified by the
  # akka.persistence.journal.plugin property.
  write-plugin = ""

  # The LevelDB write journal is notifying the query side as soon as things
  # are persisted, but for efficiency reasons the query side retrieves the events
  # in batches that sometimes can be delayed up to the configured `refresh-interval`.
  refresh-interval = 3s

  # How many events to fetch in one query (replay) and keep buffered until they
  # are delivered downstreams.
  max-buffer-size = 100
}

#akka {
#  actor {
#    serializers {
#      java = "akka.serialization.JavaSerializer"
#      proto = "akka.remote.serialization.ProtobufSerializer"
#    }
#    serialization-bindings {
#      "com.github.sorhus.webalytics.model.Model" = proto
#    }
#  }
#}
