akka{

  http.server.parsing.max-content-length=104857600
  #loglevel = DEBUG
  persistence {
    # Absolute path to the default journal plugin configuration entry.
#    journal.plugin = "akka.persistence.journal.inmem"
    journal.plugin = "akka.persistence.journal.leveldb"
    # Absolute path to the default snapshot store plugin configuration entry.
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"


    # Configuration for the LeveldbReadJournal
    query.journal.leveldb {
      # Implementation class of the LevelDB ReadJournalProvider
      class = "akka.persistence.query.journal.leveldb.LeveldbReadJournalProvider"

      # Absolute path to the write journal plugin configuration entry that this
      # query journal will connect to. That must be a LeveldbJournal or SharedLeveldbJournal.
      # If undefined (or "") it will connect to the default journal as specified by the
      # akka.persistence.journal.plugin property.
      write-plugin = "journal"

      # The LevelDB write journal is notifying the query side as soon as things
      # are persisted, but for efficiency reasons the query side retrieves the events
      # in batches that sometimes can be delayed up to the configured `refresh-interval`.
      refresh-interval = 3s

      # How many events to fetch in one query (replay) and keep buffered until they
      # are delivered downstreams.
      max-buffer-size = 100
    }
  }
  actor {

    roaring{
      path = "roaring"
    }

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible, default = 5
      throughput = 5
    }
    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "com.github.sorhus.webalytics.akka.document.DocumentIdState" = kryo
      "com.github.sorhus.webalytics.akka.domain.DomainState" = kryo
      "com.github.sorhus.webalytics.akka.event.Event" = kryo
      "com.github.sorhus.webalytics.akka.segment.MutableSegmentState" = kryo
    }

    kryo  {
      type = "nograph"
      idstrategy = "implicit"
#      idstrategy = "explicit"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "off"

      implicit-registration-logging = true

      mappings {
        "com.github.sorhus.webalytics.akka.document.DocumentIdState" = 21
        "com.github.sorhus.webalytics.akka.domain.DomainState" = 22
        "com.github.sorhus.webalytics.model.Bucket" = 23
        "com.github.sorhus.webalytics.model.Dimension" = 24
        "com.github.sorhus.webalytics.model.DocumentId" = 25
        "com.github.sorhus.webalytics.akka.domain.DomainState" = 26
        "com.github.sorhus.webalytics.akka.domain.MutableDomainState" = 49
        "com.github.sorhus.webalytics.model.Element" = 27
        "com.github.sorhus.webalytics.model.ElementId" = 28
        "com.github.sorhus.webalytics.akka.event.LoadImmutable" = 49
        "com.github.sorhus.webalytics.akka.event.PostEvent" = 29
        "com.github.sorhus.webalytics.akka.event.PostMetaEvent" = 30
        "com.github.sorhus.webalytics.model.Value" = 31
        "com.github.sorhus.webalytics.akka.segment.MutableBitsetOps$" = 32
        "com.github.sorhus.webalytics.akka.segment.MutableMapWrapper" = 33
        "com.github.sorhus.webalytics.akka.segment.MutableSegmentState" = 34
        "com.github.sorhus.webalytics.akka.segment.RoaringBitmapWrapper" = 35
        "scala.collection.immutable.HashMap$HashTrieMap" = 36
        "scala.collection.immutable.HashSet$HashTrieSet" = 37
        "scala.collection.immutable.Map$EmptyMap$" = 38
        "scala.collection.immutable.Map$Map1" = 39
        "scala.collection.immutable.Map$Map2" = 40
        "scala.collection.immutable.Set$EmptySet$" = 41
        "scala.collection.immutable.Set$Set1" = 42
        "scala.collection.immutable.Set$Set2" = 43
        "scala.collection.immutable.Set$Set3" = 44
        "scala.collection.immutable.Set$Set4" = 45
        "scala.collection.mutable.HashMap" = 46
        "org.roaringbitmap.RoaringBitmap" = 47
        "org.roaringbitmap.RoaringArray" = 48
      }

      kryo-trace = false
    }
  }
}

extensions = [
  "com.romix.akka.serialization.kryo.KryoSerializationExtension$"
]

